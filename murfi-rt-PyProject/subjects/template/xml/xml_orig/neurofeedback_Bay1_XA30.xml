<?xml version="1.0" encoding="UTF-8"?>
<study name="rtDMN">
  <option name="subjectsDir"> ../subjects </option>
  <subject>
    <option name="name"> 2vol </option>
  </subject>
    <option name="softwareDir"> /opt/murfi/ </option>
</study>

<scanner>
  <option name="disabled">     false </option>
  <option name="tr">             1.25 </option>
  <option name="measurements">   288 </option>
  <option name="port">           15000 </option>
  <option name="saveImages">     true </option>
  <option name="receiveImages">  true </option>
  <option name="onlyReadMoCo">  false </option>
  <option name="unmosaic">      true </option>
  <option name="imageType">      epi </option>
  <option name="matrixSize">     98 </option>
  <option name="slices">         75 </option>
  <option name="voxdim1">        2 </option>
  <option name="voxdim2">        2 </option>
  <option name="voxdim3">        2 </option>
  <option name="preHeader">     true </option>

</scanner>

<infoserver>
  <option name="disabled"> false </option>
  <option name="port"> 15001 </option>
</infoserver>

<!-- processing steps (every TR)-->
<processor>
  <!-- creats a mosaic for the GUI -->
  <module name="mosaic">
    <option name="disabled"> false </option>
    <output>display</output>
    <output>log</output>
  </module>
 
  <!-- deviation of voxel intensity from expected value  -->
  <module name="incremental-glm">
    <option name="disabled"> false </option>

    <option name="makeavail">true</option>
    <output>display</output>

    <option name="maskRoiID">brain</option>

	<!-- design matrix -->
    <design>
      <option name="disabled"> false </option>

     <!-- parameters specifying neural conditions of interest -->

      <!-- each condition should have its own vector of "on" trs as 1s
           and the rest 0s. if there is a cyclic block pattern then
           only one cycle's worth needs to be specified, the program
           will repeat that pattern until the end of the scan. -->
      <option name="condition" conditionName="Regulation">
        1 1  

      </option>

      <!-- 30-second baseline -->
      <option name="conditionShift">0</option>

    </design>
  </module>

  <!-- compute moment to moment neural activation -->
  <module name="current-activation">

    <option name="disabled"> false </option>
    <option name="makeavail">true</option>
    <option name="print"> true </option>

    <option name="modelFitModuleID"> incremental-glm </option>
    <option name="modelFitRoiID"> brain </option>
    <option name="maskRoiID"> brain </option>

    <option name="numDataPointsForErrEst"> 15 </option>

  </module>

  <!-- compute feedback -->
  <module name="roi-combine">
    <output> infoserver </output>
    <output>display</output>

    <option name="disabled"> false </option>
    <option name="print"> true </option>

    <option name="makeavail">true</option>

    <option name="method"> weighted-ave </option>

    <option name="maskRoiID"> pcc </option>

    <option name="inputModuleID"> current-activation </option>
    <option name="inputDataName"> activation-img </option>
    <option name="inputRoiID"> brain </option>

    <option name="weightModuleID"> incremental-glm </option>
    <option name="weightDataName"> residual_mse-img </option>
  </module>


  <module name="roi-combine">
    <output> infoserver </output>
    <output>display</output>

    <option name="disabled"> false </option>
    <option name="print"> true </option>

    <option name="makeavail">true</option>

    <option name="method"> weighted-ave </option>

    <option name="maskRoiID"> dlpfc </option>

    <option name="inputModuleID"> current-activation </option>
    <option name="inputDataName"> activation-img </option>
    <option name="inputRoiID"> brain </option>

    <option name="weightModuleID"> incremental-glm </option>
    <option name="weightDataName"> residual_mse-img </option>
  </module>


</processor>
